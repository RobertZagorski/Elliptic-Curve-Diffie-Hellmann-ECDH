package dh;
import dh.ECPunkt;
import java.math.BigInteger;
/**
 * Klasa klienta odopowiadaj¹ca za generowanie kluczy publicznych 
 * i prywatnych klientów
 * @author Vitali Karpinski
 * @author Robert Zagórski
 *
 */
public class Klient {

	BigInteger kluczPrywatny;
	ECPunkt kluczPubliczny;
	ECPunkt G;
	BigInteger n;
	BigInteger h;
	ECPunkt kluczTajny;
	/**
	 * Konstuktor klasy Client pozwalaj¹cy na zapisanie parametrów
	 * pocz¹tkowych algorytmu obliczania kluczy ECDH
	 * @param G Generator grupy punktów krzywej eliptycznej
	 * @param n rz¹d generatora, du¿a liczba pierwsza
	 * @param h liczba warstw podgrupy
	 * Liczba punktów generowanych przez dany generator jest równa n*h
	 */
	public Klient(ECPunkt G,BigInteger n,BigInteger h)
	{
		this.G=G;
		this.n=n;
		this.h=h;
	}
	
	/**
	 * Funkcja generuj¹ca klucz prywatny u¿ytkownika (du¿a liczbê pierwsz¹ 
	 * o zadanej liczbie bitów)
	 * @param b liczba bitów
	 */
	public void genKluczaPrywatnego(int b)
	{
			
	}
	
	/**
	 * Generacja klucza publicznego z klucza prywatnego i generatora
	 */
	public void oblKluczaPublicznego()
	{
		
	}
	
	/**
	 * Generacja wspólnego klucza tajnego z klucza prywatnego i klucza 
	 * publicznego drugiej strony
	 */
	public void oblKluczaTajnego()
	{
		
	}
	
	/**
	 * Funkcja przekszta³caj¹ca klucz tajny uzgodniony w trakcie sesji 
	 * (punkt na krzywej eliptycznej) na ci¹g bitowy
	 */
	public void genklucz01()
	{
		
	}
	
}
